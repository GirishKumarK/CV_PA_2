Without Regularizer

#regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)
pool_flat = tf.reshape(X, [-1, 28, 28, 1])
conv1 = tf.layers.conv2d(inputs=pool_flat, filters=20, kernel_size=[5, 5], padding="same", activation=tf.nn.relu)
pool1 = tf.layers.max_pooling2d(inputs=conv1, pool_size=[2, 2], strides=2)
conv2 = tf.layers.conv2d(inputs=pool1, filters=20, kernel_size=[5, 5], padding="same", activation=tf.nn.relu)
pool2 = tf.layers.max_pooling2d(inputs=conv2, pool_size=[2, 2], strides=2)
pool2_flat = tf.reshape(pool2, [-1, int(pool2.shape[1]) * int(pool2.shape[2]) * int(pool2.shape[3])])
dense1 = tf.layers.dense(inputs=pool2_flat, units=hidden_size, activation=tf.nn.relu)
dense2 = tf.layers.dense(inputs=dense1, units=hidden_size, activation=tf.nn.relu)
dropout = tf.layers.dropout(inputs=dense2, rate=0.5, training=is_train)
fcl = dropout

runfile('C:/Users/GirishKumarK/ComputerVision/CV_PA_2/a2_q2_testCNN.py', args='5', wdir='C:/Users/GirishKumarK/ComputerVision/CV_PA_2')
Extracting ../mnist/data\train-images-idx3-ubyte.gz
Extracting ../mnist/data\train-labels-idx1-ubyte.gz
Extracting ../mnist/data\t10k-images-idx3-ubyte.gz
Extracting ../mnist/data\t10k-labels-idx1-ubyte.gz
Initial Shape of trainX : (55000, 784)
Initial Shape of trainY : (55000, 10)
Initial Shape of testX  : (10000, 784)
Initial Shape of testY  : (10000, 10)

******************** epoch 1 ********************
the training took: 27(s)
accuracy of the trained model 0.961600

******************** epoch 2 ********************
the training took: 24(s)
accuracy of the trained model 0.955400

******************** epoch 3 ********************
the training took: 23(s)
accuracy of the trained model 0.950200

******************** epoch 4 ********************
the training took: 23(s)
accuracy of the trained model 0.963300

******************** epoch 5 ********************
the training took: 23(s)
accuracy of the trained model 0.960500

******************** epoch 6 ********************
the training took: 23(s)
accuracy of the trained model 0.932200

******************** epoch 7 ********************
the training took: 23(s)
accuracy of the trained model 0.804200

******************** epoch 8 ********************
the training took: 23(s)
accuracy of the trained model 0.691100

******************** epoch 9 ********************
the training took: 24(s)
accuracy of the trained model 0.112200

******************** epoch 10 ********************
the training took: 23(s)
accuracy of the trained model 0.166400

******************** epoch 11 ********************
the training took: 27(s)
accuracy of the trained model 0.100900

******************** epoch 12 ********************
the training took: 23(s)
accuracy of the trained model 0.104100

******************** epoch 13 ********************
the training took: 23(s)
accuracy of the trained model 0.281200

******************** epoch 14 ********************
the training took: 24(s)
accuracy of the trained model 0.104200

******************** epoch 15 ********************
the training took: 25(s)
accuracy of the trained model 0.104200

******************** epoch 16 ********************
the training took: 25(s)
accuracy of the trained model 0.103100

******************** epoch 17 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 18 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 19 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 20 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 21 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 22 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 23 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 24 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 25 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 26 ********************
the training took: 25(s)
accuracy of the trained model 0.103100

******************** epoch 27 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 28 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 29 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 30 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 31 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 32 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 33 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 34 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 35 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 36 ********************
the training took: 28(s)
accuracy of the trained model 0.103100

******************** epoch 37 ********************
the training took: 25(s)
accuracy of the trained model 0.103100

******************** epoch 38 ********************
the training took: 24(s)
accuracy of the trained model 0.103100

******************** epoch 39 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

******************** epoch 40 ********************
the training took: 23(s)
accuracy of the trained model 0.103100

********************model 5********************
accuracy is 0.103100


With Regularizer

regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)
pool_flat = tf.reshape(X, [-1, 28, 28, 1])
conv1 = tf.layers.conv2d(inputs=pool_flat, filters=20, kernel_size=[5, 5], padding="same", activation=tf.nn.relu)
pool1 = tf.layers.max_pooling2d(inputs=conv1, pool_size=[2, 2], strides=2)
conv2 = tf.layers.conv2d(inputs=pool1, filters=20, kernel_size=[5, 5], padding="same", activation=tf.nn.relu)
pool2 = tf.layers.max_pooling2d(inputs=conv2, pool_size=[2, 2], strides=2)
pool2_flat = tf.reshape(pool2, [-1, int(pool2.shape[1]) * int(pool2.shape[2]) * int(pool2.shape[3])])
dense1 = tf.layers.dense(inputs=pool2_flat, units=hidden_size, activation=tf.nn.relu)
dense2 = tf.layers.dense(inputs=dense1, units=hidden_size, activation=tf.nn.relu)
dropout = tf.layers.dropout(inputs=dense2, rate=0.5, training=is_train)
fcl = dropout

runfile('C:/Users/GirishKumarK/ComputerVision/CV_PA_2/a2_q2_testCNN.py', args='5', wdir='C:/Users/GirishKumarK/ComputerVision/CV_PA_2')
Extracting ../mnist/data\train-images-idx3-ubyte.gz
Extracting ../mnist/data\train-labels-idx1-ubyte.gz
Extracting ../mnist/data\t10k-images-idx3-ubyte.gz
Extracting ../mnist/data\t10k-labels-idx1-ubyte.gz
Initial Shape of trainX : (55000, 784)
Initial Shape of trainY : (55000, 10)
Initial Shape of testX  : (10000, 784)
Initial Shape of testY  : (10000, 10)

******************** epoch 1 ********************
the training took: 23(s)
accuracy of the trained model 0.970300

******************** epoch 2 ********************
the training took: 22(s)
accuracy of the trained model 0.970800

******************** epoch 3 ********************
the training took: 22(s)
accuracy of the trained model 0.972100

******************** epoch 4 ********************
the training took: 22(s)
accuracy of the trained model 0.970300

******************** epoch 5 ********************
the training took: 22(s)
accuracy of the trained model 0.969800

******************** epoch 6 ********************
the training took: 22(s)
accuracy of the trained model 0.969300

******************** epoch 7 ********************
the training took: 22(s)
accuracy of the trained model 0.927700

******************** epoch 8 ********************
the training took: 22(s)
accuracy of the trained model 0.933700

******************** epoch 9 ********************
the training took: 22(s)
accuracy of the trained model 0.101000

******************** epoch 10 ********************
the training took: 22(s)
accuracy of the trained model 0.101000

******************** epoch 11 ********************
the training took: 22(s)
accuracy of the trained model 0.101000

******************** epoch 12 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 13 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 14 ********************
the training took: 24(s)
accuracy of the trained model 0.101000

******************** epoch 15 ********************
the training took: 24(s)
accuracy of the trained model 0.101000

******************** epoch 16 ********************
the training took: 24(s)
accuracy of the trained model 0.101000

******************** epoch 17 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 18 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 19 ********************
the training took: 25(s)
accuracy of the trained model 0.101000

******************** epoch 20 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 21 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 22 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 23 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 24 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 25 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 26 ********************
the training took: 23(s)
accuracy of the trained model 0.101000

******************** epoch 27 ********************
the training took: 24(s)
accuracy of the trained model 0.101000

******************** epoch 28 ********************
the training took: 23(s)
accuracy of the trained model 0.101400

******************** epoch 29 ********************
the training took: 24(s)
accuracy of the trained model 0.271600

******************** epoch 30 ********************
the training took: 25(s)
accuracy of the trained model 0.102400

******************** epoch 31 ********************
the training took: 26(s)
accuracy of the trained model 0.173800

******************** epoch 32 ********************
the training took: 30(s)
accuracy of the trained model 0.176200

******************** epoch 33 ********************
the training took: 33(s)
accuracy of the trained model 0.097300

******************** epoch 34 ********************
the training took: 30(s)
accuracy of the trained model 0.097300

******************** epoch 35 ********************
the training took: 26(s)
accuracy of the trained model 0.097300

******************** epoch 36 ********************
the training took: 34(s)
accuracy of the trained model 0.097300

******************** epoch 37 ********************
the training took: 33(s)
accuracy of the trained model 0.097300

******************** epoch 38 ********************
the training took: 31(s)
accuracy of the trained model 0.097300

******************** epoch 39 ********************
the training took: 31(s)
accuracy of the trained model 0.097300

******************** epoch 40 ********************
the training took: 28(s)
accuracy of the trained model 0.097300

********************model 5********************
accuracy is 0.097300